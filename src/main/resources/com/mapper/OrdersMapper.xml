<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.OrdersMapper">


    <insert id="save" useGeneratedKeys="true" keyProperty="id" >
    insert into orders(number,status,user_id,address_book_id,order_time,checkout_time,pay_method,pay_status,amount,remark,phone,address,user_name,consignee,cancel_reason,rejection_reason,cancel_time,estimated_delivery_time,delivery_status,delivery_time,pack_amount,tableware_status,tableware_number)
    values(#{number},#{status},#{userId},#{addressBookId},#{orderTime},#{checkoutTime},#{payMethod},#{payStatus},#{amount},#{remark},#{phone},#{address},#{userName},#{consignee},#{cancelReason},#{rejectionReason},#{cancelTime},#{estimatedDeliveryTime},#{deliveryStatus},#{deliveryTime},#{packAmount},#{tablewareStatus},#{tablewareNumber})
    </insert>
    <update id="update" parameterType="com.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateComplete">
      update orders
      set status = #{status},
          delivery_time=#{deliveryTime}
      where id = #{id}


    </update>
    <select id="getHistoryOrders" resultType="com.entity.Orders">
        select * from orders
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
        order by order_time desc
    </select>
    <select id="conditionSearch" resultType="com.entity.Orders">


       select * from orders
<where>
    <if test="phone != null and phone!='' ">
        and phone =#{phone}
    </if>
    <if test="number != null and number!='' ">
        and number like concat('%',#{number},'%')
    </if>
    <if test="status != null">
        and status = #{status}
    </if>
    <if test="orderTime != null">
        and order_time &gt;= #{orderTime}
    </if>
    <if test="deliveryTime != null">
        and order_time &lt;= #{deliveryTime}
    </if>
</where>



    </select>
    <select id="getSumAmountByDate" resultType="Double">

       select sum(amount) from orders
         <where>
             <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
             </if>
             <if test="endTime != null">
             and order_time &lt;= #{endTime}
             </if>
             <if test="status != null">
                and status = #{status}
             </if>
         </where>
    </select>
    <select id="getOrderCount" resultType="Double">
        select count(id) from orders
        <where>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
        </where>
    </select>
    <select id="getValidOrderCount" resultType="Double">
        select count(id) from orders
        <where>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="getOrderId" resultType="java.lang.Long">
        select id from orders
        <where>
            <if test="begin != null">
                and order_time &gt;= #{begin}
            </if>
            <if test="end != null">
                and order_time &lt;= #{end}
            </if>
        </where>
    </select>
    <select id="getTurnover" resultType="java.lang.Double">
        select sum(amount) from orders
        <where>
            <if test="begin != null">
                and order_time &gt;= #{begin}
            </if>
            <if test="end != null">
                and order_time &lt;= #{end}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="getValidUser" resultType="java.lang.Double">
        select count(DISTINCT user_id) as user_count from orders
        <where>
            <if test="begin != null">
                and order_time &gt;= #{begin}
            </if>
            <if test="end != null">
                and order_time &lt;= #{end}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>



    </select>
    <select id="getSumByDate" resultType="java.lang.Double">
        select count(*) from orders
        <where>
            <if test="begin != null">
                and order_time &gt;= #{begin}
            </if>
            <if test="end != null">
                and order_time &lt;= #{end}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
</mapper>
